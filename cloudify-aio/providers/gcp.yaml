tosca_definitions_version: cloudify_dsl_1_4

description: >
  Creates necessary network resources and VM instance with public IP
  on GCP.

imports:
  - https://cloudify.co/spec/cloudify/6.4.1/types.yaml
  - plugin:cloudify-gcp-plugin?version= >=1.6.0
  - plugin:cloudify-fabric-plugin
  - plugin:cloudify-utilities-plugin?version= >=1.22.1

inputs:

  resource_prefix:
    type: string
    description: Control parameters for names in resources.
    default: 'dev'

  cloudify_manager_version:
    type: string
    display_label: Cloudify Manager Version
    description: Version of the Cloudify Manager to install.
    default: '6.4.1'

  region_name:
    type: string
    display_label: GCP Region
    description: GCP region to deploy the resources in.
    default: 'us-east1'
    constraints:
      - valid_values:
        - asia-south1
        - asia-south2
        - asia-east1
        - asia-east2
        - asia-northeast1
        - asia-northeast2
        - asia-northeast3
        - asia-southeast1
        - australia-southeast1
        - australia-southeast2
        - europe-central2
        - europe-north2
        - europe-southwest1
        - europe-west1
        - europe-west2
        - europe-west3
        - europe-west4
        - europe-west6
        - europe-west8
        - europe-west9
        - northamerica-northeast1
        - northamerica-northeast2
        - southamerica-east1
        - us-central1
        - us-east1
        - us-east4
        - us-west1
        - us-west2
        - us-west3
        - us-west4

  network_cidr:
    type: string
    display_label: VPC CIDR
    description: CIDR of the new VPC
    default: 10.10.0.0/16

  subnet_cidr:
    type: string
    display_label: Subnet CIDR
    description: CIDR of the new Subnet
    default: 10.10.0.0/24

  availability_zone:
    type: string
    display_label: GCP Zone
    description: GCP Zone to deploy the resources in.
    default: "a"
    constraints:
      - valid_values:
        - "a"
        - "b"
        - "c"
        - "d"

  instance_type:
    type: string
    display_label: VM size
    description: GCP Virtual Machine type.
    default: n1-standard-2
    constraints:
      - valid_values:
        - n1-standard-1
        - n1-standard-2
        - n1-standard-4
        - n1-standard-8
        - n1-standard-16
        - n1-standard-32
        - n1-standard-64
        - n1-standard-96

  agent_user:
    type: string
    display_label: The user name of the VM
    description: >
      The username of the agent running on the instance created from
      the image.
    default: centos

  agent_key_name:
    type: string
    display_label: Agent Key Name
    default: agent_key

dsl_definitions:

  client_config: &gcp_config
    auth: { get_secret: gcp_credentials }
    zone:
      concat:
        - { get_input: region_name }
        - '-'
        - { get_input: availability_zone }

node_templates:

  vm:
    type: cloudify.nodes.gcp.Instance
    properties:
      client_config: *gcp_config
      agent_config:
        install_method: none
        key: { get_attribute: [agent_key, private_key_export] }
        user: { get_input: agent_user }
      name:
        concat:
          - { get_input: resource_prefix }
          - '-cloudify-aio-'
          - { get_input: cloudify_manager_version }
      use_public_ip: true
      zone:
        concat:
          - { get_input: region_name }
          - '-'
          - { get_input: availability_zone }
      external_ip: true
    relationships:
      - type: cloudify.relationships.connected_to
        target: firewall
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.relationships.depends_on
        target: agent_key
      - type: cloudify.relationships.depends_on
        target: disk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/gcp/key.py
          executor: central_deployment_agent
          inputs:
            user: { get_input: agent_user }
            ssh_keys:
              - { get_attribute: [agent_key, public_key_export] }

  agent_key:
    type: cloudify.keys.nodes.RSAKey
    properties:
      resource_config:
        key_name: { get_input: agent_key_name }
        openssh_format: true
      use_secret_store: true
      use_secrets_if_exist: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
          inputs:
            store_private_key_material: true

  disk:
    type: cloudify.nodes.gcp.Volume
    properties:
      client_config: *gcp_config
      name:
        string_replace:
          - concat:
            - { get_input: resource_prefix }
            - '-cloudify-aio-'
            - { get_input: cloudify_manager_version }
            - '-disk'
          - '.'
          - '-'
      image: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20191210
      size: 30
      boot: true

  firewall:
    type: cloudify.nodes.gcp.FirewallRule
    properties:
      client_config: *gcp_config
      name:
        concat:
          - { get_input: resource_prefix }
          - '-cloudify-aio-'
          - { get_input: cloudify_manager_version }
          - '-fw'
      allowed:
        icmp:
        tcp:
          - 22
          - 80
          - 443
          - 5671
          - 8000
          - 8009
          - 53333
      sources:
        - 0.0.0.0/0
    relationships:
      - type: cloudify.relationships.connected_to
        target: network

  subnet:
    type: cloudify.nodes.gcp.SubNetwork
    properties:
      client_config: *gcp_config
      region: { get_input: region_name }
      name:
        concat:
          - { get_input: resource_prefix }
          - '-cloudify-aio-'
          - { get_input: cloudify_manager_version }
          - '-subnet'
      subnet: { get_input: subnet_cidr }
    relationships:
      - type: cloudify.gcp.relationships.contained_in_network
        target: network

  network:
    type: cloudify.nodes.gcp.Network
    properties:
      client_config: *gcp_config
      auto_subnets: false
      name: 
        concat:
          - { get_input: resource_prefix }
          - '-cloudify-aio-'
          - { get_input: cloudify_manager_version }
          - '-network'

groups:

  vm-group:
    members:
    - vm
    - disk

policies:

  vm-group-policy:
    type: cloudify.policies.scaling
    properties:
      default_instances: 1
    targets: [vm-group]

capabilities:

  endpoint:
    description: The external endpoint of the VM.
    value: { get_attribute: [vm, ip] }

  private_ip:
    description: The private IP of the VM.
    value: { get_attribute: [vm, networkInterfaces, 0, networkIP] }

  user:
    description: user ID.
    value: { get_input: agent_user }

  key_content:
    description: Private agent key
    value: { get_attribute: [agent_key, private_key_export] }

  security_group_id: 
    description: Security group resource ID.
    value: { get_attribute: [firewall, resource_id] }

  vpc_id:
    description: Network resource ID.
    value: { get_attribute: [network, resource_id] }

  vm_id: 
    description: VM resource ID.
    value: { get_attribute: [vm, resource_id] }
  
  rg_id: 
    description: >
      Mock resource group id - to be compatible with Azure VM template.
    value: 'mocked_resource_group_id'
